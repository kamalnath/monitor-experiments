psql -h 127.0.0.1 -U postgres


create table deb_copy (
id serial primary key,
name varchar
);

create table test_not_copied (
id serial primary key,
name varchar
);

ALTER TABLE deb_copy ADD Email varchar;
ALTER TABLE deb_copy DROP COLUMN Email;

alter system set wal_level to 'logical';
ALTER TABLE deb_copy REPLICA IDENTITY FULL;

ALTER TABLE wingspan_user REPLICA IDENTITY FULL;

ALTER TABLE test_not_copied REPLICA IDENTITY FULL;

grant all privileges on database wingspan to wnadm;


docker container stop poc_debezium_db_1
docker container start poc_debezium_db_1

curl -i -X POST -H "Accept:application/json" -H "Content-Type:application/json"  127.0.0.1:8083/connectors/ --data "@debezium.json"
curl -i http://localhost:8083/connectors/arctype-connector/status

curl -X DELETE http://localhost:8083/connectors/arctype-connector

insert into test_not_copied (name) values ('test_not_copied changes should not be in Kafka Test!');
insert into deb_copy (name) values ('kamal');


from kafka import KafkaConsumer
consumer = KafkaConsumer('wingspan.wingspan.deb_copy',bootstrap_servers='10.245.177.17:9092')
for msg in consumer:
   print (msg)

pip install kafka-python
from kafka import KafkaConsumer
consumer = KafkaConsumer('pid.pid.wingspan_user',bootstrap_servers='10.245.177.17:9092')
for msg in consumer:
   print (msg)

import kafka
from kafka.admin import KafkaAdminClient, NewTopic
admin_client = kafka.KafkaAdminClient(bootstrap_servers=['10.245.177.17:9092'])
topic_list = []
topic_list.append(NewTopic(name="pid.public.deb_copy", num_partitions=1, replication_factor=1))
admin_client.create_topics(new_topics=topic_list, validate_only=False)


topic_list.append(NewTopic(name="pid.public.user_profile", num_partitions=1, replication_factor=1))
topic_list.append(NewTopic(name="pid.public.user_preferences", num_partitions=1, replication_factor=1))
topic_list.append(NewTopic(name="pid.public.dealer", num_partitions=1, replication_factor=1))





import kafka
admin_client = kafka.KafkaAdminClient(bootstrap_servers=['10.245.177.17:9092'])
admin_client.list_topics()

admin_client.delete_topics(topics=['pid.pid.deb_copy'])	
--------------------------------------------------------------------------------------

import youtube_dl

ydl = {
    'format': 'bestvideo+bestaudio/best',
    'outtmpl': 'test.%(ext)s',
}


with ydl:
    result = ydl.extract_info(
        'http://www.youtube.com/watch?v=NuM_RDdlCRU',
        download=False 
    )
    

print (result)  

for ele in result["formats"]:
  if (ele["format_note"]=="360p"):
    print (ele)
    print ("------------------------------------------------------")
